<?php 

/**
 * Implements hook_form_alter().
 */
function webform_bcc_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'webform_email_edit_form') {
    $node = $form['node']['#value'];
    if ($form['eid']['#value']) {
      $email = $node->webform['emails'][$form['eid']['#value']];
    }
    $field = 'bcc';
    $default_value = t('No BCC address');
    $title = t('Reply-To address');
    $description = t('Any e-mail, select, or hidden form element may be selected as the Reply-To e-mail address.');

    $form[$field . '_option'] = array(
      '#title' => check_plain($title),
      '#type' => 'radios',
      '#default_value' => (isset($email) && is_numeric($email[$field])) ? 'component' : ((empty($default_value) || (isset($email) && isset($email[$field]) && $email[$field] != 'default')) ? 'custom' : 'default'),
      '#description' => $description,
    );
    if (!empty($default_value)) {
      $form[$field . '_option']['#options']['default'] = t('Default: %value', array('%value' => $default_value));
    }
    $form[$field . '_option']['#options']['custom'] = t('Custom');
    $form[$field . '_option']['#options']['component'] = t('Component');

    $form[$field . '_custom'] = array(
      '#type' => 'textfield',
      '#size' => 40,
      '#default_value' => (isset($email) && isset($email[$field]) && !is_numeric($email[$field]) && $email[$field] != 'default') ? $email[$field] : NULL,
      '#maxlength' => 255,
    );
    $options = webform_component_list($node, 'email_address', FALSE);
    $form[$field . '_component'] = array(
      '#type' => 'select',
      '#default_value' => (isset($email) && isset($email[$field]) && is_numeric($email[$field])) ? $email[$field] : NULL,
      '#options' => empty($options) ? array('' => t('No available components')) : $options,
      '#disabled' => empty($options) ? TRUE : FALSE,
      '#weight' => 6,
    );

    $form['#validate'][] = 'webform_bcc_form_validate';
    $form['#submit'][] = 'webform_bcc_form_submit';
  }
}

/**
 * Implements hook_theme().
 */
function webform_bcc_theme($existing, $type, $theme, $path) {
  return array(
    'webform_bcc_mail_headers' => array(
      'variables' => array('node' => NULL, 'submission' => NULL, 'email' => NULL),
      'pattern' => 'webform_mail_headers_[0-9]+',
    ),
    'webform_bcc_email_edit_form' => array(
      'render element' => 'form',
    ),
  );
}

/**
 * Implements hook_theme_registry_alter().
 */
function webform_bcc_theme_registry_alter(&$theme_registry) {
  // Set the current theme defintions as fallbacks
  $theme_registry['webform_bcc_mail_headers_fallback'] = $theme_registry['webform_mail_headers'];
  $theme_registry['webform_bcc_email_edit_form_fallback'] = $theme_registry['webform_email_edit_form'];
  // Override the current theme definitions
  $theme_registry['webform_mail_headers'] = $theme_registry['webform_bcc_mail_headers'];
  $theme_registry['webform_email_edit_form'] = $theme_registry['webform_bcc_email_edit_form'];
}

function theme_webform_bcc_email_edit_form($variables) {
  $form = $variables['form'];

  $field = 'bcc';

  foreach (array('custom' => t('Custom'), 'component' => t('Component')) as $option => $title) {
    $form[$field . '_' . $option]['#attributes']['class'] = array('webform-set-active');
    $form[$field . '_option'][$option]['#theme_wrappers'] = array('webform_inline_radio');
    $form[$field . '_option'][$option]['#inline_element'] = drupal_render($form[$field . '_' . $option]);
  }

  if (isset($form[$field . '_option']['#options']['default'])) {
    $form[$field . '_option']['default']['#theme_wrappers'] = array('webform_inline_radio');
  }

  $details = drupal_render($form[$field . '_option']);
  $form['bcc_details'] = array(
    '#type' => 'fieldset',
    '#title' => t('E-mail BCC details'),
    '#weight' => 11,
    '#children' => $details,
    '#collapsible' => FALSE,
    '#parents' => array('details'),
    '#groups' => array('details' => array()),
    '#attributes' => array(),
  );

  return theme('webform_bcc_email_edit_form_fallback', $form);
}

/**
 * Validate handler for webform_email_edit_form().
 */
function webform_bcc_form_validate($form, &$form_state) {
  if ($form_state['values']['bcc_option'] == 'custom' && $form_state['values']['bcc_custom'] != '') {
    foreach (explode(',', $form_state['values']['bcc_custom']) as $value) {
      if (!valid_email_address(ltrim($value))) {
       form_set_error('bcc_custom', t('The entered e-mail address "@email" does not appear valid.', array('@email' => ltrim($value))));
      }
    }
  }
}

/**
 * Submit handler for webform_email_edit_form().
 */
function webform_bcc_form_submit($form, &$form_state) {
  // Ensure a webform record exists.
  $node = $form_state['values']['node'];
  webform_ensure_record($node);

  $email = array(
    'eid' => $form_state['values']['eid'],
    'nid' => $node->nid,
  );
  $field = 'bcc';
  $option = $form_state['values'][$field . '_option'];
  if ($option == 'default') {
    $email[$field] = 'default';
  }
  else {
    $email[$field] = $form_state['values'][$field . '_' . $option];
  }
  // We should be using webform_email_update($email), but it returns an error due to
  // the NULL $email['excluded_components'], so we use drupal_write_record instead
  drupal_write_record('webform_emails', $email, array('nid', 'eid'));
}

function webform_bcc_mail_alter(&$message){
  if (!empty($message['params']['email']['bcc'])) {
    $message['headers']['bcc'] = $message['params']['email']['bcc'];
  }
}
/*
function webform_cc_theme() {
  $theme = array(
    
    'webform_bcc_mail_headers' => array(
      'variables' => array('node' => NULL, 'submission' => NULL, 'email' => NULL),
      'pattern' => 'webform_mail_headers_[0-9]+',
    ),
  );
  
  // Theme functions in all components.
  $components = webform_components(TRUE);
  foreach ($components as $type => $component) {
    if ($theme_additions = webform_component_invoke($type, 'theme')) {
      $theme = array_merge($theme, $theme_additions);
    }
  }
  
  return $theme;
}


function webform_bcc_mail_headers($variables) {
  $headers = array(
    'X-Mailer' => 'Drupal Webform (PHP/' . phpversion() . ')',
  );
  
  return $headers;
}*/
